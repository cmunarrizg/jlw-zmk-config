/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;

            label = "homerow";
        };

        td_caps: td_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp CAPS>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        CMB_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        CMB_GUI {
            bindings = <&kp LEFT_GUI>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W           &kp E             &kp R               &kp T              &kp Y        &kp U               &kp I              &kp O    &kp P
&kp A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LEFT_CONTROL F  &td_caps           &kp H        &hm LEFT_CONTROL J  &hm RIGHT_SHIFT K  &kp L    &hm RIGHT_ALT SEMICOLON
&kp Z  &kp X           &kp C             &kp V               &kp B              &kp N        &kp M               &kp COMMA          &kp DOT  &kp FSLH
                                         &kp DELETE          &lt 1 BACKSPACE    &kp ESC &lt 2 SPACE  &kp TAB
            >;
        };

        right_layer {
            bindings = <
&kp PRINTSCREEN  &none          &kp GRAVE  &kp LS(GRAVE)  &kp LEFT_BRACKET        &kp RIGHT_BRACKET         &kp HOME   &kp UP_ARROW    &kp END    &kp PAGE_UP
&kp LC(LS(C))    &kp LC(LS(V))  &kp SQT    &kp LS(SQT)    &kp LS(LEFT_BRACKET)    &kp LS(RIGHT_BRACKET)     &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &kp PAGE_DOWN
&none            &kp LC(X)      &kp LC(C)  &kp LC(V)      &kp NON_US_BACKSLASH    &kp LS(NON_US_BACKSLASH)  &kp EQUAL  &kp LS(EQUAL)   &kp MINUS  &kp LS(MINUS)
                                           &none          &none                 &none  &lt 3 SPACE               &none
            >;
        };

        left_layer {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)     &kp LS(NUMBER_6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
&kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp N5         &kp NUMBER_6      &kp N7      &kp N8      &kp N9      &kp N0
&kp F1            &kp F2            &kp F3            &kp F4            &kp F5         &kp F6            &kp F7      &kp F8      &kp F9      &kp F10
                                                      &kp BACKSPACE     &lt 3 ENTER    &none &none             &none
            >;
        };

        tri_layer {
            bindings = <
&sys_reset    &bootloader   &none         &none       &kp C_MUTE           &none  &none  &none  &none  &sys_reset
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &kp C_VOLUME_UP      &none  &none  &none  &none  &bootloader
&kp LG(L)     &none         &none         &none       &kp C_VOLUME_DOWN    &none  &none  &none  &none  &none
                                          &none       &none                &none &none  &none
            >;
        };
    };
};
